Try to implement  include headers via  https://  ) :
.. like : 
  #include "{curl:https://github.com/nothings/stb/blob/master/stb_sprintf.h}"
..

   With LD_PRELOAD= and dll library "libinclude_hook.so", 
   replace implementation of  open/close/stat libc functions.
   if contains http url / download open curl  and return file(socket) related descriptor.  
   
   Advantages : 
       no need to re-compile compiler 


 Build libinclude_hook.so 
  $ make 


 Usage  : 
   with TCC  :  $ HOOKUP_VERBOSE=1 LD_PRELOAD=./libinclude_hook.so  tcc -run ./1.tcc.c  
   with GCC  :  $ (HOOKUP_VERBOSE=1 LD_PRELOAD=./libinclude_hook.so gcc -o 1 1.tcc.c && exit 0 ) && ./1 
   with clang:  $ (HOOKUP_VERBOSE=1 LD_PRELOAD=./libinclude_hook.so clang -o 1 1.tcc.c && exit 0 ) && ./1 

  "hookup-library"  tcc / gcc / clang 
  
 Note : Not a problem to run other simple tools using libc-open :  
     eg : $ LD_PRELOAD=./libinclude_hook.so  cat "{curl:https://github.com/nothings/stb/blob/master/stb_sprintf.h}" | grep -n printf
 
